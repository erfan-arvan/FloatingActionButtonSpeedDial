<!--
  ~ Copyright 2022 Roberto Leinardi.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~      http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<resources>

    <!--Typography-->

    <!--Material’s type system supports 13 categories that, when combined, form the typescale. -->
    <!--This typescale is evident in the variety of text styles and sizes that appear on screen, -->
    <!--ranging from body copy to buttons. Type appears across the UI, in places such as in -->
    <!--components and on surfaces.-->

    <!--These styles should be used throughout your app when creating text views so all your -->
    <!--text is consistently styled and easily updated if design or product needs change. Each -->
    <!--style in the type scale can be customized by defining a style and overriding that -->
    <!--style's Material Theme attribute (?textAppearanceHeadline1, ?textAppearanceBody2, etc.) -->
    <!--in your app's theme. In this project, type attributes have already been overridden in -->
    <!--themes.xml and are set to the styles in this file, type.xml. These ?textAppearance* -->
    <!--theme attributes should be used in your layouts to set a TextView’s appearance instead -->
    <!--of fully qualified style references and in favor of manually setting text properties.-->

    <!--Type on Android is themed by defining a custom TextAppearance for each type scale style. -->
    <!--Use standard TextAppearance attributes such as textSize, textColor, fontFamily, -->
    <!--letterSpacing, etc. to define a custom appearance for each and see how they are -->
    <!--applied globally across your app.-->

    <style name="TextAppearance.MyTheme.DisplayLarge" parent="TextAppearance.Material3.DisplayLarge">
        <!-- Your custom type style here-->
    </style>

    <style name="TextAppearance.MyTheme.DisplayMedium" parent="TextAppearance.Material3.DisplayMedium">
        <!-- Your custom type style here-->
    </style>

    <style name="TextAppearance.MyTheme.DisplaySmall" parent="TextAppearance.Material3.DisplaySmall">
        <!-- Your custom type style here-->
    </style>

    <style name="TextAppearance.MyTheme.HeadlineLarge" parent="TextAppearance.Material3.HeadlineLarge">
        <!-- Your custom type style here-->
    </style>

    <style name="TextAppearance.MyTheme.HeadlineMedium" parent="TextAppearance.Material3.HeadlineMedium">
        <!-- Your custom type style here-->
    </style>

    <style name="TextAppearance.MyTheme.HeadlineSmall" parent="TextAppearance.Material3.HeadlineSmall">
        <!-- Your custom type style here-->
    </style>

    <style name="TextAppearance.MyTheme.TitleLarge" parent="TextAppearance.Material3.TitleLarge">
        <!-- Your custom type style here-->
    </style>

    <style name="TextAppearance.MyTheme.TitleMedium" parent="TextAppearance.Material3.TitleMedium">
        <!-- Your custom type style here-->
    </style>

    <style name="TextAppearance.MyTheme.TitleSmall" parent="TextAppearance.Material3.TitleSmall">
        <!-- Your custom type style here-->
    </style>

    <style name="TextAppearance.MyTheme.BodyLarge" parent="TextAppearance.Material3.BodyLarge">
        <!-- Your custom type style here-->
    </style>

    <style name="TextAppearance.MyTheme.BodyMedium" parent="TextAppearance.Material3.BodyMedium">
        <!-- Your custom type style here-->
    </style>

    <style name="TextAppearance.MyTheme.BodySmall" parent="TextAppearance.Material3.BodySmall">
        <!-- Your custom type style here-->
    </style>

    <style name="TextAppearance.MyTheme.LabelLarge" parent="TextAppearance.Material3.LabelLarge">
        <!-- Your custom type style here-->
    </style>

    <style name="TextAppearance.MyTheme.LabelMedium" parent="TextAppearance.Material3.LabelMedium">
        <!-- Your custom type style here-->
    </style>

    <style name="TextAppearance.MyTheme.LabelSmall" parent="TextAppearance.Material3.LabelSmall">
        <!-- Your custom type style here-->
    </style>

</resources>
