/*
 * Copyright 2022 Roberto Leinardi.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'speeddial.android-library-conventions'
    id 'speeddial.detekt-conventions'
    //    id 'speeddial.artifact-publish-library-conventions' // TODO
}

ext {
    PUBLISH_GROUP_ID = 'com.leinardi.android'
    PUBLISH_VERSION = config.android.version_name_compose
    PUBLISH_ARTIFACT_ID = 'speed-dial.compose'
}

android {
    namespace = "com.leinardi.android.speeddial.compose"
    defaultConfig {
        versionName config.android.version_name_compose
        minSdk config.android.minSdkCompose
        consumerProguardFiles 'consumer-proguard-rules.pro'
    }

    buildFeatures {
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion libs.versions.androidx.compose.compiler.get()
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
    }

    kotlinOptions {
        freeCompilerArgs += '-opt-in=kotlin.RequiresOptIn'
        jvmTarget = config.android.javaVersion
    }
}

kapt {
    useBuildCache = true
    correctErrorTypes true
    javacOptions {
        option('-Xmaxerrs', Integer.MAX_VALUE)
    }
}

kotlin {
    sourceSets.all {
        languageSettings {
            progressiveMode = true // deprecations and bug fixes for unstable code take effect immediately
        }
    }
}
dependencies {
    implementation libs.androidx.appcompat
    api libs.androidx.compose.material
    api libs.androidx.compose.material3
    implementation libs.androidx.compose.runtime
    implementation libs.androidx.compose.tooling
    implementation libs.androidx.compose.ui
    implementation libs.androidx.core.ktx
    debugApi libs.androidx.customview  // Workaround for https://issuetracker.google.com/issues/227767363
    debugApi libs.androidx.customview.poolingcontainer  // Workaround for https://issuetracker.google.com/issues/227767363
}
